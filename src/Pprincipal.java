
import Hilos.HiloCamara;
import Camara.UtilizacionCam;
import Hilos.HiloRealidadAumentada;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.opencv.core.Core;
import org.opencv.core.Mat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Janire Fernandez
 */
public class Pprincipal extends javax.swing.JFrame {

    private HiloCamara hiloCamara;
    //private HiloRealidadAumentada realidadAumentada;
    
    public Pprincipal() {
       
       initComponents(); 
       inicioCamara();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        iniciar = new javax.swing.JButton();
        parar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        iniciar.setText("Iniciar");
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });

        parar.setText("Parar");
        parar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pararActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(iniciar)
                .addGap(94, 94, 94)
                .addComponent(parar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iniciar)
                    .addComponent(parar))
                .addGap(0, 25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
        // TODO add your handling code here:
        /*Para que funcione todo, tengo que haber cargado la libreria en la main*/
       
        iniciar.setEnabled(false);//desactivamos el boton de iniciar
        parar.setEnabled(true);//activamos el boton de parar
        
        System.out.println("Se ha presionado boton INICIAR");
        hiloCamara.start();
       // iniciarRealidadAumentada();
        
        
       
    }//GEN-LAST:event_iniciarActionPerformed

    private void pararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pararActionPerformed
        
        parar.setEnabled(false);//desactivamos el boton de parar
        iniciar.setEnabled(true);//activamos el boton de iniciar
        
        System.out.println("Se ha presionado el boton PARAR");
         hiloCamara.stop();
        //realidadAumentada.stop();
        
        
    }//GEN-LAST:event_pararActionPerformed

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /*Cargar la libreria nativa de OpenCv:*/
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pprincipal().setVisible(true);
            }
        });
    }
    
      private void inicioCamara()
    {
        System.out.println("Inicializaci√≥n de la camara...");
        hiloCamara = new HiloCamara();
        hiloCamara.setJPanel(jPanel1);
        hiloCamara.setCamara(new UtilizacionCam());
        hiloCamara.getCamara().inicioCamara();
        //hiloCamara.setRunnable(true);
        hiloCamara.start();
       /*Creamos el hilo*/
       //t = new Thread(hiloCamara);
       //t.setDaemon(true);
       // t.start();
    }
      
    /*  private void iniciarRealidadAumentada()
      {
          System.out.println("Iniciando realidad aumentada...");
          realidadAumentada = new HiloRealidadAumentada();
          realidadAumentada.setJPanel(jPanel1);
          realidadAumentada.setCamara(hiloCamara.getCamara());
          realidadAumentada.setImagen(hiloCamara.getImagen());
          realidadAumentada.start();
          
      }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton iniciar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton parar;
    // End of variables declaration//GEN-END:variables
}
